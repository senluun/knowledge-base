#!/usr/bin/env python
import requests
import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'knowledge_base.settings')
django.setup()

from accounts.models import User
from knowledge.models import Category

def test_web_form():
    print("üåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–µ–±-—Ñ–æ—Ä–º—ã...")
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é
    user = User.objects.first()
    category = Category.objects.first()
    
    print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.get_full_name()}")
    print(f"üìÅ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {category.name} (ID: {category.id})")
    
    # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é
    session = requests.Session()
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
    login_url = "http://127.0.0.1:8000/accounts/login/"
    response = session.get(login_url)
    print(f"üìÑ GET {login_url} - —Å—Ç–∞—Ç—É—Å: {response.status_code}")
    
    if response.status_code != 200:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞")
        return
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º CSRF —Ç–æ–∫–µ–Ω
    from bs4 import BeautifulSoup
    soup = BeautifulSoup(response.text, 'html.parser')
    csrf_token = soup.find('input', {'name': 'csrfmiddlewaretoken'})
    
    if not csrf_token:
        print("‚ùå CSRF —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    csrf_value = csrf_token['value']
    print(f"üîê CSRF —Ç–æ–∫–µ–Ω –Ω–∞–π–¥–µ–Ω: {csrf_value[:20]}...")
    
    # –õ–æ–≥–∏–Ω–∏–º—Å—è
    login_data = {
        'username': user.username,
        'password': 'admin123',  # –ü–∞—Ä–æ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        'csrfmiddlewaretoken': csrf_value
    }
    
    response = session.post(login_url, data=login_data, allow_redirects=True)
    print(f"üì§ POST {login_url} - —Å—Ç–∞—Ç—É—Å: {response.status_code}")
    
    if response.status_code != 200:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É")
        print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text[:500]}...")
        return
    
    print("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É")
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∞—Ç—å–∏
    create_url = "http://127.0.0.1:8000/knowledge/create-article/"
    response = session.get(create_url)
    print(f"üìÑ GET {create_url} - —Å—Ç–∞—Ç—É—Å: {response.status_code}")
    
    if response.status_code != 200:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∞—Ç—å–∏")
        return
    
    print("‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∞—Ç—å–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º CSRF —Ç–æ–∫–µ–Ω –¥–ª—è —Ñ–æ—Ä–º—ã —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∞—Ç—å–∏
    soup = BeautifulSoup(response.text, 'html.parser')
    csrf_token = soup.find('input', {'name': 'csrfmiddlewaretoken'})
    
    if not csrf_token:
        print("‚ùå CSRF —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∞—Ç—å–∏")
        return
    
    csrf_value = csrf_token['value']
    print(f"üîê CSRF —Ç–æ–∫–µ–Ω –¥–ª—è —Ñ–æ—Ä–º—ã: {csrf_value[:20]}...")
    
    # –°–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ñ–æ—Ä–º—ã
    form_data = {
        'title': '–¢–µ—Å—Ç–æ–≤–∞—è —Å—Ç–∞—Ç—å—è —á–µ—Ä–µ–∑ –≤–µ–±',
        'content': '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–∞—è —Å—Ç–∞—Ç—å—è, —Å–æ–∑–¥–∞–Ω–Ω–∞—è —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å.',
        'excerpt': '–¢–µ—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ',
        'category': category.id,
        'tags': '—Ç–µ—Å—Ç, –≤–µ–±',
        'is_featured': False,
        'allow_comments': True,
        'csrfmiddlewaretoken': csrf_value
    }
    
    print(f"üìù –î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã: {form_data}")
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST –∑–∞–ø—Ä–æ—Å
    response = session.post(create_url, data=form_data)
    print(f"üì§ POST {create_url} - —Å—Ç–∞—Ç—É—Å: {response.status_code}")
    
    if response.status_code == 302:
        print("‚úÖ –†–µ–¥–∏—Ä–µ–∫—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω!")
        print(f"üìç –†–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞: {response.headers.get('Location', '–ù–µ —É–∫–∞–∑–∞–Ω')}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Ç–∞—Ç—å—è —Å–æ–∑–¥–∞–Ω–∞
        from knowledge.models import Article
        article = Article.objects.filter(title='–¢–µ—Å—Ç–æ–≤–∞—è —Å—Ç–∞—Ç—å—è —á–µ—Ä–µ–∑ –≤–µ–±').first()
        if article:
            print(f"‚úÖ –°—Ç–∞—Ç—å—è —Å–æ–∑–¥–∞–Ω–∞: {article.title} (—Å—Ç–∞—Ç—É—Å: {article.status})")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            from moderation.models import Notification
            notifications = Notification.objects.filter(related_object_id=article.id)
            print(f"üîî –°–æ–∑–¥–∞–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {notifications.count()}")
            
            for notification in notifications:
                print(f"   - {notification.title} –¥–ª—è {notification.user.get_full_name()}")
        else:
            print("‚ùå –°—Ç–∞—Ç—å—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã: {response.status_code}")
        print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text[:500]}...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –æ—à–∏–±–∫–∏ –≤ —Ñ–æ—Ä–º–µ
        soup = BeautifulSoup(response.text, 'html.parser')
        error_divs = soup.find_all('div', class_='alert-danger')
        if error_divs:
            print("‚ùå –û—à–∏–±–∫–∏ —Ñ–æ—Ä–º—ã:")
            for error_div in error_divs:
                print(f"   {error_div.get_text().strip()}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –æ—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
        error_lists = soup.find_all('ul', class_='errorlist')
        if error_lists:
            print("‚ùå –û—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏:")
            for error_list in error_lists:
                print(f"   {error_list.get_text().strip()}")

if __name__ == "__main__":
    test_web_form()





import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'knowledge_base.settings')
django.setup()

from accounts.models import User
from knowledge.models import Category

def test_web_form():
    print("üåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–µ–±-—Ñ–æ—Ä–º—ã...")
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é
    user = User.objects.first()
    category = Category.objects.first()
    
    print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.get_full_name()}")
    print(f"üìÅ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {category.name} (ID: {category.id})")
    
    # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é
    session = requests.Session()
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
    login_url = "http://127.0.0.1:8000/accounts/login/"
    response = session.get(login_url)
    print(f"üìÑ GET {login_url} - —Å—Ç–∞—Ç—É—Å: {response.status_code}")
    
    if response.status_code != 200:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞")
        return
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º CSRF —Ç–æ–∫–µ–Ω
    from bs4 import BeautifulSoup
    soup = BeautifulSoup(response.text, 'html.parser')
    csrf_token = soup.find('input', {'name': 'csrfmiddlewaretoken'})
    
    if not csrf_token:
        print("‚ùå CSRF —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    csrf_value = csrf_token['value']
    print(f"üîê CSRF —Ç–æ–∫–µ–Ω –Ω–∞–π–¥–µ–Ω: {csrf_value[:20]}...")
    
    # –õ–æ–≥–∏–Ω–∏–º—Å—è
    login_data = {
        'username': user.username,
        'password': 'admin123',  # –ü–∞—Ä–æ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        'csrfmiddlewaretoken': csrf_value
    }
    
    response = session.post(login_url, data=login_data, allow_redirects=True)
    print(f"üì§ POST {login_url} - —Å—Ç–∞—Ç—É—Å: {response.status_code}")
    
    if response.status_code != 200:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É")
        print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text[:500]}...")
        return
    
    print("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É")
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∞—Ç—å–∏
    create_url = "http://127.0.0.1:8000/knowledge/create-article/"
    response = session.get(create_url)
    print(f"üìÑ GET {create_url} - —Å—Ç–∞—Ç—É—Å: {response.status_code}")
    
    if response.status_code != 200:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∞—Ç—å–∏")
        return
    
    print("‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∞—Ç—å–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º CSRF —Ç–æ–∫–µ–Ω –¥–ª—è —Ñ–æ—Ä–º—ã —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∞—Ç—å–∏
    soup = BeautifulSoup(response.text, 'html.parser')
    csrf_token = soup.find('input', {'name': 'csrfmiddlewaretoken'})
    
    if not csrf_token:
        print("‚ùå CSRF —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∞—Ç—å–∏")
        return
    
    csrf_value = csrf_token['value']
    print(f"üîê CSRF —Ç–æ–∫–µ–Ω –¥–ª—è —Ñ–æ—Ä–º—ã: {csrf_value[:20]}...")
    
    # –°–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ñ–æ—Ä–º—ã
    form_data = {
        'title': '–¢–µ—Å—Ç–æ–≤–∞—è —Å—Ç–∞—Ç—å—è —á–µ—Ä–µ–∑ –≤–µ–±',
        'content': '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–∞—è —Å—Ç–∞—Ç—å—è, —Å–æ–∑–¥–∞–Ω–Ω–∞—è —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å.',
        'excerpt': '–¢–µ—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ',
        'category': category.id,
        'tags': '—Ç–µ—Å—Ç, –≤–µ–±',
        'is_featured': False,
        'allow_comments': True,
        'csrfmiddlewaretoken': csrf_value
    }
    
    print(f"üìù –î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã: {form_data}")
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST –∑–∞–ø—Ä–æ—Å
    response = session.post(create_url, data=form_data)
    print(f"üì§ POST {create_url} - —Å—Ç–∞—Ç—É—Å: {response.status_code}")
    
    if response.status_code == 302:
        print("‚úÖ –†–µ–¥–∏—Ä–µ–∫—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω!")
        print(f"üìç –†–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞: {response.headers.get('Location', '–ù–µ —É–∫–∞–∑–∞–Ω')}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Ç–∞—Ç—å—è —Å–æ–∑–¥–∞–Ω–∞
        from knowledge.models import Article
        article = Article.objects.filter(title='–¢–µ—Å—Ç–æ–≤–∞—è —Å—Ç–∞—Ç—å—è —á–µ—Ä–µ–∑ –≤–µ–±').first()
        if article:
            print(f"‚úÖ –°—Ç–∞—Ç—å—è —Å–æ–∑–¥–∞–Ω–∞: {article.title} (—Å—Ç–∞—Ç—É—Å: {article.status})")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            from moderation.models import Notification
            notifications = Notification.objects.filter(related_object_id=article.id)
            print(f"üîî –°–æ–∑–¥–∞–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {notifications.count()}")
            
            for notification in notifications:
                print(f"   - {notification.title} –¥–ª—è {notification.user.get_full_name()}")
        else:
            print("‚ùå –°—Ç–∞—Ç—å—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã: {response.status_code}")
        print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text[:500]}...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –æ—à–∏–±–∫–∏ –≤ —Ñ–æ—Ä–º–µ
        soup = BeautifulSoup(response.text, 'html.parser')
        error_divs = soup.find_all('div', class_='alert-danger')
        if error_divs:
            print("‚ùå –û—à–∏–±–∫–∏ —Ñ–æ—Ä–º—ã:")
            for error_div in error_divs:
                print(f"   {error_div.get_text().strip()}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –æ—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
        error_lists = soup.find_all('ul', class_='errorlist')
        if error_lists:
            print("‚ùå –û—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏:")
            for error_list in error_lists:
                print(f"   {error_list.get_text().strip()}")

if __name__ == "__main__":
    test_web_form()


















