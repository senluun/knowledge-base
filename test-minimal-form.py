#!/usr/bin/env python
import requests
import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'knowledge_base.settings')
django.setup()

from accounts.models import User
from knowledge.models import Category
from bs4 import BeautifulSoup

def test_minimal_form():
    print("üß™ –¢–µ—Å—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Ñ–æ—Ä–º—ã...")
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é
    user = User.objects.first()
    category = Category.objects.first()
    
    print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.get_full_name()}")
    print(f"üìÅ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {category.name} (ID: {category.id})")
    
    # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é
    session = requests.Session()
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
    login_url = "http://127.0.0.1:8000/accounts/login/"
    response = session.get(login_url)
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º CSRF —Ç–æ–∫–µ–Ω
    soup = BeautifulSoup(response.text, 'html.parser')
    csrf_token = soup.find('input', {'name': 'csrfmiddlewaretoken'})
    csrf_value = csrf_token['value']
    
    # –õ–æ–≥–∏–Ω–∏–º—Å—è
    login_data = {
        'username': user.username,
        'password': 'admin123',
        'csrfmiddlewaretoken': csrf_value
    }
    
    session.post(login_url, data=login_data, allow_redirects=True)
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∞—Ç—å–∏
    create_url = "http://127.0.0.1:8000/knowledge/create-article/"
    response = session.get(create_url)
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º CSRF —Ç–æ–∫–µ–Ω –¥–ª—è —Ñ–æ—Ä–º—ã —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∞—Ç—å–∏
    soup = BeautifulSoup(response.text, 'html.parser')
    csrf_token = soup.find('input', {'name': 'csrfmiddlewaretoken'})
    csrf_value = csrf_token['value']
    
    # –¢–µ—Å—Ç 1: –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    print("\nüìù –¢–µ—Å—Ç 1: –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
    form_data = {
        'title': '–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç—å—è —Ç–µ—Å—Ç 2',
        'content': '–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏',
        'category': category.id,
        'csrfmiddlewaretoken': csrf_value
    }
    
    response = session.post(create_url, data=form_data)
    print(f"üì§ POST —Å—Ç–∞—Ç—É—Å: {response.status_code}")
    
    if response.status_code == 302:
        print("‚úÖ –†–µ–¥–∏—Ä–µ–∫—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω!")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã")
        soup = BeautifulSoup(response.text, 'html.parser')
        error_divs = soup.find_all('div', class_='alert-danger')
        if error_divs:
            print("‚ùå –û—à–∏–±–∫–∏ —Ñ–æ—Ä–º—ã:")
            for error_div in error_divs:
                print(f"   {error_div.get_text().strip()}")
    
    # –¢–µ—Å—Ç 2: –ü–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    print("\nüìù –¢–µ—Å—Ç 2: –ü–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
    form_data = {
        'title': '–ü–æ–ª–Ω–∞—è —Å—Ç–∞—Ç—å—è —Ç–µ—Å—Ç 2',
        'content': '–≠—Ç–æ –ø–æ–ª–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –æ–ø–∏—Å–∞–Ω–∏–µ–º.',
        'excerpt': '–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏',
        'category': category.id,
        'tags': '—Ç–µ—Å—Ç, —Å—Ç–∞—Ç—å—è',
        'is_featured': False,
        'allow_comments': True,
        'csrfmiddlewaretoken': csrf_value
    }
    
    response = session.post(create_url, data=form_data)
    print(f"üì§ POST —Å—Ç–∞—Ç—É—Å: {response.status_code}")
    
    if response.status_code == 302:
        print("‚úÖ –†–µ–¥–∏—Ä–µ–∫—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω!")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã")
        soup = BeautifulSoup(response.text, 'html.parser')
        error_divs = soup.find_all('div', class_='alert-danger')
        if error_divs:
            print("‚ùå –û—à–∏–±–∫–∏ —Ñ–æ—Ä–º—ã:")
            for error_div in error_divs:
                print(f"   {error_div.get_text().strip()}")

if __name__ == "__main__":
    test_minimal_form()





import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'knowledge_base.settings')
django.setup()

from accounts.models import User
from knowledge.models import Category
from bs4 import BeautifulSoup

def test_minimal_form():
    print("üß™ –¢–µ—Å—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Ñ–æ—Ä–º—ã...")
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é
    user = User.objects.first()
    category = Category.objects.first()
    
    print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.get_full_name()}")
    print(f"üìÅ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {category.name} (ID: {category.id})")
    
    # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é
    session = requests.Session()
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
    login_url = "http://127.0.0.1:8000/accounts/login/"
    response = session.get(login_url)
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º CSRF —Ç–æ–∫–µ–Ω
    soup = BeautifulSoup(response.text, 'html.parser')
    csrf_token = soup.find('input', {'name': 'csrfmiddlewaretoken'})
    csrf_value = csrf_token['value']
    
    # –õ–æ–≥–∏–Ω–∏–º—Å—è
    login_data = {
        'username': user.username,
        'password': 'admin123',
        'csrfmiddlewaretoken': csrf_value
    }
    
    session.post(login_url, data=login_data, allow_redirects=True)
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∞—Ç—å–∏
    create_url = "http://127.0.0.1:8000/knowledge/create-article/"
    response = session.get(create_url)
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º CSRF —Ç–æ–∫–µ–Ω –¥–ª—è —Ñ–æ—Ä–º—ã —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∞—Ç—å–∏
    soup = BeautifulSoup(response.text, 'html.parser')
    csrf_token = soup.find('input', {'name': 'csrfmiddlewaretoken'})
    csrf_value = csrf_token['value']
    
    # –¢–µ—Å—Ç 1: –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    print("\nüìù –¢–µ—Å—Ç 1: –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
    form_data = {
        'title': '–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç—å—è —Ç–µ—Å—Ç 2',
        'content': '–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏',
        'category': category.id,
        'csrfmiddlewaretoken': csrf_value
    }
    
    response = session.post(create_url, data=form_data)
    print(f"üì§ POST —Å—Ç–∞—Ç—É—Å: {response.status_code}")
    
    if response.status_code == 302:
        print("‚úÖ –†–µ–¥–∏—Ä–µ–∫—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω!")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã")
        soup = BeautifulSoup(response.text, 'html.parser')
        error_divs = soup.find_all('div', class_='alert-danger')
        if error_divs:
            print("‚ùå –û—à–∏–±–∫–∏ —Ñ–æ—Ä–º—ã:")
            for error_div in error_divs:
                print(f"   {error_div.get_text().strip()}")
    
    # –¢–µ—Å—Ç 2: –ü–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    print("\nüìù –¢–µ—Å—Ç 2: –ü–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
    form_data = {
        'title': '–ü–æ–ª–Ω–∞—è —Å—Ç–∞—Ç—å—è —Ç–µ—Å—Ç 2',
        'content': '–≠—Ç–æ –ø–æ–ª–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –æ–ø–∏—Å–∞–Ω–∏–µ–º.',
        'excerpt': '–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏',
        'category': category.id,
        'tags': '—Ç–µ—Å—Ç, —Å—Ç–∞—Ç—å—è',
        'is_featured': False,
        'allow_comments': True,
        'csrfmiddlewaretoken': csrf_value
    }
    
    response = session.post(create_url, data=form_data)
    print(f"üì§ POST —Å—Ç–∞—Ç—É—Å: {response.status_code}")
    
    if response.status_code == 302:
        print("‚úÖ –†–µ–¥–∏—Ä–µ–∫—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω!")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã")
        soup = BeautifulSoup(response.text, 'html.parser')
        error_divs = soup.find_all('div', class_='alert-danger')
        if error_divs:
            print("‚ùå –û—à–∏–±–∫–∏ —Ñ–æ—Ä–º—ã:")
            for error_div in error_divs:
                print(f"   {error_div.get_text().strip()}")

if __name__ == "__main__":
    test_minimal_form()


















