#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—É—Å—Ç—ã—Ö slug –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""
import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'knowledge_base.settings')
django.setup()

from books.models import Category, Tag, Book
from django.utils.text import slugify

def fix_slugs():
    """–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—É—Å—Ç—ã—Ö slug"""
    print("–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—É—Å—Ç—ã—Ö slug...")
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    print("\n–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:")
    for category in Category.objects.all():
        if not category.slug:
            old_slug = category.slug
            category.slug = slugify(category.name)
            category.save()
            print(f"  ‚úÖ {category.name}: '{old_slug}' -> '{category.slug}'")
        else:
            print(f"  ‚ÑπÔ∏è {category.name}: slug —É–∂–µ –µ—Å—Ç—å '{category.slug}'")
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∫–Ω–∏–≥–∏
    print("\n–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–∏–≥:")
    for book in Book.objects.all():
        if not book.slug:
            old_slug = book.slug
            book.slug = slugify(book.title)
            book.save()
            print(f"  ‚úÖ {book.title}: '{old_slug}' -> '{book.slug}'")
        else:
            print(f"  ‚ÑπÔ∏è {book.title}: slug —É–∂–µ –µ—Å—Ç—å '{book.slug}'")
    
    # –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    print("\n–£–¥–∞–ª–µ–Ω–∏–µ –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π:")
    categories_to_remove = []
    
    # –ù–∞—Ö–æ–¥–∏–º –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    category_names = {}
    for category in Category.objects.all():
        name_lower = category.name.lower()
        if name_lower in category_names:
            # –ù–∞—Ö–æ–¥–∏–º –¥—É–±–ª–∏–∫–∞—Ç
            existing_category = category_names[name_lower]
            if existing_category.slug and not category.slug:
                # –£–¥–∞–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –±–µ–∑ slug
                categories_to_remove.append(category)
                print(f"  üóëÔ∏è –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç: {category.name} (–±–µ–∑ slug)")
            elif not existing_category.slug and category.slug:
                # –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –±–µ–∑ slug
                categories_to_remove.append(existing_category)
                print(f"  üóëÔ∏è –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç: {existing_category.name} (–±–µ–∑ slug)")
        else:
            category_names[name_lower] = category
    
    # –£–¥–∞–ª—è–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –¥—É–±–ª–∏–∫–∞—Ç—ã
    for category in categories_to_remove:
        # –ü–µ—Ä–µ–º–µ—â–∞–µ–º –∫–Ω–∏–≥–∏ –≤ –æ—Å–Ω–æ–≤–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
        main_category = None
        for cat in Category.objects.all():
            if cat.name.lower() == category.name.lower() and cat.slug:
                main_category = cat
                break
        
        if main_category:
            # –ü–µ—Ä–µ–º–µ—â–∞–µ–º –∫–Ω–∏–≥–∏
            books_to_move = Book.objects.filter(category=category)
            for book in books_to_move:
                book.category = main_category
                book.save()
                print(f"    üìö –ü–µ—Ä–µ–º–µ—â–µ–Ω–∞ –∫–Ω–∏–≥–∞ '{book.title}' –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é '{main_category.name}'")
        
        # –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç
        category.delete()
        print(f"  ‚úÖ –£–¥–∞–ª–µ–Ω–∞ –¥—É–±–ª–∏—Ä—É—é—â–∞—è—Å—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è: {category.name}")
    
    print(f"\n–ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"  –ö–∞—Ç–µ–≥–æ—Ä–∏–π: {Category.objects.count()}")
    print(f"  –¢–µ–≥–æ–≤: {Tag.objects.count()}")
    print(f"  –ö–Ω–∏–≥: {Book.objects.count()}")
    
    print("\n–ü—Ä–æ–≤–µ—Ä–∫–∞ slug:")
    for category in Category.objects.all():
        print(f"  - {category.name}: '{category.slug}'")

if __name__ == '__main__':
    fix_slugs()
    input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")

